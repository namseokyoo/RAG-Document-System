---
alwaysApply: true
---

# Python 개발 환경 규칙

## 가상환경 사용 필수
- Python 앱(desktop_app.py, app.py 등)을 실행할 때는 **반드시 가상환경을 먼저 활성화**해야 합니다.
- 가상환경 없이 실행하면 모듈 import 오류 및 의존성 문제가 발생합니다.

### 올바른 실행 방법

**Windows (PowerShell):**
```powershell
.\venv\Scripts\activate
python desktop_app.py
```

**또는 한 줄로:**
```powershell
.\venv\Scripts\python.exe desktop_app.py
```

**백그라운드 실행 시에도 동일:**
```powershell
.\venv\Scripts\python.exe desktop_app.py
```

### 잘못된 실행 방법 (오류 발생)
```powershell
# ❌ 가상환경 없이 실행 - ModuleNotFoundError 발생
python desktop_app.py
```

### PyInstaller 빌드 시에도 가상환경 필수
```powershell
.\venv\Scripts\activate
.\venv\Scripts\pyinstaller.exe OC_RAG_Desktop.spec --noconfirm
```

## 구조 인식 청킹 전략 참조

### 필수 참조 문서
- **구조 인식 청킹 전략**: `docs/structure_aware_chunking_strategy.md`
- 문서 처리 및 청킹 관련 작업 시 **반드시 이 문서를 참조**해야 합니다.
- PDF, PPT/PPTX, XLS/XLSX, Text 4가지 타입별 최적화된 청킹 전략이 정의되어 있습니다.

### 청킹 전략 적용 원칙
- **문서 타입별 구조 인식**: 각 문서의 고유한 구조를 분석하여 의미론적 청킹 수행
- **가중치 시스템**: 청크 타입별로 다른 가중치 적용 (제목 > 노트 > 일반 문단)
- **메타데이터 풍부화**: 청크의 특성과 컨텍스트 정보를 상세히 기록
- **최적 청크 크기**: 문서 타입별로 다른 최적 크기 사용 (PDF: 500, PPTX: 300, XLSX: 400, TXT: 500)

### 구현 시 주의사항
- 기존 청킹 로직과의 호환성 유지
- 성능 테스트를 통한 최적화
- 사용자 피드백 반영
- 점진적 적용 (1단계 → 2단계 → 3단계)
